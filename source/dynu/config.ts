// This file was auto-generated by @joelek/ts-autoguard. Edit at own risk.

export type Config = {
	"api_key": string,
	"hostname": string
};

export const Config = {
	as(subject: any, path: string = ""): Config {
		return ((subject, path) => {
			if ((subject != null) && (subject.constructor === globalThis.Object)) {
				((subject, path) => {
					if ((subject != null) && (subject.constructor === globalThis.String)) {
						return subject;
					}
					throw "Type guard \"String\" failed at \"" + path + "\"!";
				})(subject["api_key"], path + "[\"api_key\"]");
				((subject, path) => {
					if ((subject != null) && (subject.constructor === globalThis.String)) {
						return subject;
					}
					throw "Type guard \"String\" failed at \"" + path + "\"!";
				})(subject["hostname"], path + "[\"hostname\"]");
				return subject;
			}
			throw "Type guard \"Object\" failed at \"" + path + "\"!";
		})(subject, path);
	},
	is(subject: any): subject is Config {
		try {
			Config.as(subject);
		} catch (error) {
			return false;
		}
		return true;
	}
};

export type Autoguard = {
	"Config": Config
};

export const Autoguard = {
	"Config": Config
};
